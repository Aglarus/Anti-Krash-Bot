require('dotenv').config();
const { Client, GatewayIntentBits, PermissionFlagsBits, EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle, SlashCommandBuilder, REST, Routes, ChannelType, AuditLogEvent } = require('discord.js');
const fs = require('fs');
const path = require('path');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const config = {
    token: process.env.DISCORD_TOKEN,
    clientId: process.env.CLIENT_ID,
    guildId: process.env.GUILD_ID
};

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
const client = new Client({
    intents: [
        GatewayIntentBits.Guilds,
        GatewayIntentBits.GuildMembers,
        GatewayIntentBits.GuildModeration,
        GatewayIntentBits.GuildMessages,
        GatewayIntentBits.MessageContent
    ]
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
let settings = {
    mentionProtection: {
        enabled: true,
        maxMentions: 5,
        timeWindow: 10000 // 10 —Å–µ–∫—É–Ω–¥
    },
    channelProtection: {
        enabled: true,
        maxChannelsPerMinute: 3
    },
    roleProtection: {
        enabled: true,
        maxRolesPerMinute: 3
    },
    categoryProtection: {
        enabled: true,
        maxCategoriesPerMinute: 2
    },
    punishment: {
        users: {
            ban: false,
            mute: true,
            muteDuration: 7, // –¥–Ω–µ–π
            removeRoles: true
        },
        bots: {
            ban: true,
            removeRoles: true
        }
    },
    whitelist: []
};

// –•—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –¥–µ–π—Å—Ç–≤–∏—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const userActions = new Map();

// –£–ª—å—Ç—Ä–∞–±—ã—Å—Ç—Ä—ã–π —Ç—Ä–µ–∫–µ—Ä –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
const fastTracker = new Map();
const INSTANT_BAN_THRESHOLD = 2; // 2 –¥–µ–π—Å—Ç–≤–∏—è –∑–∞ 500–º—Å = –±–∞–Ω
const ULTRA_FAST_WINDOW = 500; // 500 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥

// –¢—Ä–µ–∫–µ—Ä —É–¥–∞–ª–µ–Ω–∏–π –¥–ª—è —Å—Ç—Ä–æ–≥–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è
const deletionTracker = new Map();
const DELETION_BAN_THRESHOLD = 2; // 2 —É–¥–∞–ª–µ–Ω–∏—è = –±–∞–Ω/–Ω–∞–∫–∞–∑–∞–Ω–∏–µ
const DELETION_WINDOW = 1000; // 1 —Å–µ–∫—É–Ω–¥–∞ (—Å—Ç—Ä–æ–∂–µ —á–µ–º –±—ã–ª–æ)

// –¢—Ä–µ–∫–µ—Ä –∫—É–ª–¥–∞—É–Ω–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è
const cooldownTracker = new Map();
const COOLDOWN_TIME = 24 * 60 * 60 * 1000; // 1 –¥–µ–Ω—å –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

// –¢—Ä–µ–∫–µ—Ä —É–¥–∞–ª–µ–Ω–∏–π –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (–ª—é–¥–µ–π) - 2 —É–¥–∞–ª–µ–Ω–∏—è –≤ –¥–µ–Ω—å
const dailyDeletionTracker = new Map();
const DAILY_DELETION_LIMIT = 2; // 2 —É–¥–∞–ª–µ–Ω–∏—è –≤ –¥–µ–Ω—å –¥–ª—è –ª—é–¥–µ–π
const DAILY_WINDOW = 24 * 60 * 60 * 1000; // 24 —á–∞—Å–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

// –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–¥–ª—è –±–æ—Ç–æ–≤ - 500–º—Å, –¥–ª—è –ª—é–¥–µ–π - 1 —Å–µ–∫)
function instantCheck(userId, isBot = false) {
    const now = Date.now();
    const window = isBot ? ULTRA_FAST_WINDOW : 1000; // 500–º—Å –¥–ª—è –±–æ—Ç–æ–≤, 1 —Å–µ–∫ –¥–ª—è –ª—é–¥–µ–π
    
    if (!fastTracker.has(userId)) {
        fastTracker.set(userId, []);
    }
    
    const activity = fastTracker.get(userId);
    
    // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏
    const recent = activity.filter(time => now - time < window);
    recent.push(now);
    fastTracker.set(userId, recent);
    
    // –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞
    if (recent.length >= INSTANT_BAN_THRESHOLD) {
        console.log(`‚ö° –ú–ì–ù–û–í–ï–ù–ù–´–ô –ë–ê–ù! ${recent.length} –¥–µ–π—Å—Ç–≤–∏–π –∑–∞ ${window}–º—Å –æ—Ç ${userId}`);
        return true;
    }
    
    return false;
}

// –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏–π –¥–ª—è —Å—Ç—Ä–æ–≥–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è (—Ç–µ–ø–µ—Ä—å –∑–∞ 1 —Å–µ–∫—É–Ω–¥—É)
function trackDeletion(userId, deletionType) {
    if (isWhitelisted(userId)) return false;
    
    const now = Date.now();
    
    if (!deletionTracker.has(userId)) {
        deletionTracker.set(userId, []);
    }
    
    const deletions = deletionTracker.get(userId);
    
    // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ (—Å—Ç–∞—Ä—à–µ 1 —Å–µ–∫—É–Ω–¥—ã)
    const recentDeletions = deletions.filter(deletion => now - deletion.time < DELETION_WINDOW);
    recentDeletions.push({ time: now, type: deletionType });
    deletionTracker.set(userId, recentDeletions);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ —É–¥–∞–ª–µ–Ω–∏–π
    if (recentDeletions.length >= DELETION_BAN_THRESHOLD) {
        const deletionTypes = recentDeletions.map(d => d.type).join(', ');
        console.log(`üö® –õ–ò–ú–ò–¢ –£–î–ê–õ–ï–ù–ò–ô –ü–†–ï–í–´–®–ï–ù! ${recentDeletions.length} —É–¥–∞–ª–µ–Ω–∏–π –∑–∞ —Å–µ–∫—É–Ω–¥—É –æ—Ç ${userId}: ${deletionTypes}`);
        return true;
    }
    
    return false;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤, —Ä–æ–ª–µ–π, –∫–∞—Ç–µ–≥–æ—Ä–∏–π
function checkCooldown(userId, actionType) {
    if (isWhitelisted(userId)) return false; // –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –∫—É–ª–¥–∞—É–Ω–æ–º
    
    const now = Date.now();
    const userKey = `${userId}_${actionType}`;
    
    if (!cooldownTracker.has(userKey)) {
        cooldownTracker.set(userKey, now);
        return false; // –ü–µ—Ä–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ
    }
    
    const lastAction = cooldownTracker.get(userKey);
    const timeSinceLastAction = now - lastAction;
    
    if (timeSinceLastAction < COOLDOWN_TIME) {
        const remainingTime = Math.ceil((COOLDOWN_TIME - timeSinceLastAction) / (60 * 60 * 1000)); // –≤ —á–∞—Å–∞—Ö
        console.log(`‚è∞ –ö–£–õ–î–ê–£–ù! ${userId} –ø–æ–ø—ã—Ç–∞–ª—Å—è ${actionType}, –æ—Å—Ç–∞–ª–æ—Å—å ${remainingTime} —á–∞—Å(–æ–≤)`);
        return true; // –î–µ–π—Å—Ç–≤–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏–∑-–∑–∞ –∫—É–ª–¥–∞—É–Ω–∞
    }
    
    cooldownTracker.set(userKey, now);
    return false; // –î–µ–π—Å—Ç–≤–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ —É–¥–∞–ª–µ–Ω–∏–π –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (–ª—é–¥–µ–π)
function checkDailyDeletionLimit(userId) {
    if (isWhitelisted(userId)) return false; // –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω
    
    const now = Date.now();
    
    if (!dailyDeletionTracker.has(userId)) {
        dailyDeletionTracker.set(userId, []);
    }
    
    const deletions = dailyDeletionTracker.get(userId);
    
    // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ (—Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤)
    const recentDeletions = deletions.filter(deletion => now - deletion < DAILY_WINDOW);
    
    if (recentDeletions.length >= DAILY_DELETION_LIMIT) {
        console.log(`üö® –î–ù–ï–í–ù–û–ô –õ–ò–ú–ò–¢ –ü–†–ï–í–´–®–ï–ù! ${userId} —É–¥–∞–ª–∏–ª ${recentDeletions.length} –æ–±—ä–µ–∫—Ç–æ–≤ –∑–∞ –¥–µ–Ω—å`);
        return true; // –õ–∏–º–∏—Ç –ø—Ä–µ–≤—ã—à–µ–Ω
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —É–¥–∞–ª–µ–Ω–∏–µ
    recentDeletions.push(now);
    dailyDeletionTracker.set(userId, recentDeletions);
    
    return false; // –õ–∏–º–∏—Ç –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ —Å—Å—ã–ª–æ–∫ –Ω–∞ –±–æ—Ç–æ–≤ (2 –≤ –¥–µ–Ω—å)
function checkDailyBotLinkLimit(userId) {
    const now = Date.now();
    
    if (!dailyBotLinkTracker.has(userId)) {
        dailyBotLinkTracker.set(userId, []);
    }
    
    const links = dailyBotLinkTracker.get(userId);
    
    // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ (—Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤)
    const recentLinks = links.filter(link => now - link < DAILY_WINDOW);
    
    if (recentLinks.length >= DAILY_BOT_LINK_LIMIT) {
        console.log(`üö® –î–ù–ï–í–ù–û–ô –õ–ò–ú–ò–¢ –°–°–´–õ–û–ö –ü–†–ï–í–´–®–ï–ù! ${userId} –æ—Ç–ø—Ä–∞–≤–∏–ª ${recentLinks.length} —Å—Å—ã–ª–æ–∫ –∑–∞ –¥–µ–Ω—å`);
        return true; // –õ–∏–º–∏—Ç –ø—Ä–µ–≤—ã—à–µ–Ω
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Å—ã–ª–∫—É
    recentLinks.push(now);
    dailyBotLinkTracker.set(userId, recentLinks);
    
    return false; // –õ–∏–º–∏—Ç –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
function loadSettings() {
    try {
        if (fs.existsSync('settings.json')) {
            settings = JSON.parse(fs.readFileSync('settings.json', 'utf8'));
        }
    } catch (error) {
        console.log('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
    }
}

// –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
function saveSettings() {
    try {
        fs.writeFileSync('settings.json', JSON.stringify(settings, null, 2));
    } catch (error) {
        console.log('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞
function isWhitelisted(userId) {
    return settings.whitelist.includes(userId);
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–ø–∞—Å–Ω—ã—Ö –ø—Ä–∞–≤ —É —É—á–∞—Å—Ç–Ω–∏–∫–∞
function hasPrivilegedRoles(member) {
    const dangerousPermissions = [
        PermissionFlagsBits.Administrator,
        PermissionFlagsBits.ManageGuild,
        PermissionFlagsBits.ManageRoles,
        PermissionFlagsBits.ManageChannels,
        PermissionFlagsBits.BanMembers,
        PermissionFlagsBits.KickMembers,
        PermissionFlagsBits.ManageMessages,
        PermissionFlagsBits.MentionEveryone,
        PermissionFlagsBits.ManageWebhooks
    ];

    const privilegedRoles = member.roles.cache.filter(role => {
        return dangerousPermissions.some(permission => role.permissions.has(permission));
    });

    return privilegedRoles;
}

// –§—É–Ω–∫—Ü–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏—è
async function punishUser(guild, user, reason) {
    let member = guild.members.cache.get(user.id);
    
    // –ï—Å–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –≤ –∫–µ—à–µ, –ø–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ —Å —Å–µ—Ä–≤–µ—Ä–∞
    if (!member) {
        try {
            member = await guild.members.fetch(user.id);
        } catch (error) {
            console.log(`–£—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω: ${user.tag} (ID: ${user.id}) - –≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä`);
            return;
        }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—à –ª–∏ —ç—Ç–æ –±–æ—Ç
    if (member.id === client.user.id) {
        console.log(`–ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∞–º–æ–≥–æ —Å–µ–±—è ${member.user.tag}`);
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤–ª–∞–¥–µ–ª–µ—Ü –ª–∏ —ç—Ç–æ —Å–µ—Ä–≤–µ—Ä–∞
    if (member.id === guild.ownerId) {
        console.log(`–ù–µ–ª—å–∑—è –Ω–∞–∫–∞–∑–∞—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Å–µ—Ä–≤–µ—Ä–∞ ${member.user.tag}`);
        return;
    }

    const botMember = guild.members.cache.get(client.user.id);
    if (!botMember) {
        console.log(`–ë–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≥–∏–ª—å–¥–∏–∏`);
        return;
    }

    console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–ª—è –Ω–∞–∫–∞–∑–∞–Ω–∏—è ${member.user.tag}`);
    console.log(`Bot —Ä–æ–ª—å: ${botMember.roles.highest.name} (–ø–æ–∑–∏—Ü–∏—è: ${botMember.roles.highest.position})`);
    console.log(`–¶–µ–ª—å —Ä–æ–ª—å: ${member.roles.highest.name} (–ø–æ–∑–∏—Ü–∏—è: ${member.roles.highest.position})`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–µ—Ä–∞—Ä—Ö–∏—é —Ä–æ–ª–µ–π - –±–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã—à–µ –Ω–∞–∫–∞–∑—ã–≤–∞–µ–º–æ–≥–æ
    if (member.roles.highest.position >= botMember.roles.highest.position) {
        console.log(`‚ùå –ù–µ–ª—å–∑—è –Ω–∞–∫–∞–∑–∞—Ç—å ${member.user.tag} - –µ–≥–æ —Ä–æ–ª—å –≤—ã—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–∞ —Ä–æ–ª–∏ –±–æ—Ç–∞`);
        return;
    }

    // –ü–†–û–í–ï–†–ö–ê –°–ü–†–ê–í–ï–î–õ–ò–í–û–°–¢–ò: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–æ–ª–µ–π
    const privilegedRoles = hasPrivilegedRoles(member);
    const hasPrivileges = privilegedRoles.size > 0;
    
    if (hasPrivileges) {
        console.log(`‚öñÔ∏è –°–ü–†–ê–í–ï–î–õ–ò–í–û–°–¢–¨: –£ ${member.user.tag} –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Ä–æ–ª–∏ —Å –ø—Ä–∞–≤–∞–º–∏ (${privilegedRoles.size} —Ä–æ–ª–µ–π)`);
        privilegedRoles.forEach(role => {
            console.log(`   - ${role.name} (–ø—Ä–∞–≤–∞: ${role.permissions.toArray().join(', ')})`);
        });
    }

    try {
        let punishmentApplied = false;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –±–æ—Ç–æ–º
        if (member.user.bot) {
            // –î–ª—è –±–æ—Ç–æ–≤ - —Å–Ω–∞—á–∞–ª–∞ —É–±—Ä–∞—Ç—å –≤—Å–µ —Ä–æ–ª–∏, –ø–æ—Ç–æ–º –±–∞–Ω–∏—Ç—å
            if (settings.punishment.bots.removeRoles && botMember.permissions.has(PermissionFlagsBits.ManageRoles)) {
                const rolesToRemove = member.roles.cache.filter(role =>
                    role.id !== guild.id && // –ù–µ @everyone —Ä–æ–ª—å
                    role.position < botMember.roles.highest.position // –†–æ–ª–∏ –Ω–∏–∂–µ –±–æ—Ç–∞
                );

                let rolesRemoved = 0;
                for (const role of rolesToRemove.values()) {
                    try {
                        await member.roles.remove(role, reason);
                        console.log(`‚úÖ –£–±—Ä–∞–Ω–∞ —Ä–æ–ª—å ${role.name} —É –±–æ—Ç–∞ ${member.user.tag}`);
                        rolesRemoved++;
                    } catch (roleError) {
                        console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–±—Ä–∞—Ç—å —Ä–æ–ª—å ${role.name} —É –±–æ—Ç–∞: ${roleError.message}`);
                    }
                }

                if (rolesRemoved > 0) {
                    console.log(`‚úÖ –£–±—Ä–∞–Ω–æ ${rolesRemoved} —Ä–æ–ª–µ–π —É –±–æ—Ç–∞ ${member.user.tag}`);
                    punishmentApplied = true;
                }
            }

            // –¢–µ–ø–µ—Ä—å –±–∞–Ω–∏—Ç—å –±–æ—Ç–∞
            if (settings.punishment.bots.ban && botMember.permissions.has(PermissionFlagsBits.BanMembers)) {
                try {
                    await member.ban({ reason: reason, deleteMessageDays: 7 });
                    console.log(`‚úÖ –ó–∞–±–∞–Ω–µ–Ω –±–æ—Ç ${member.user.tag}`);
                    punishmentApplied = true;
                } catch (banError) {
                    console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±–∞–Ω–∏—Ç—å –±–æ—Ç–∞ ${member.user.tag}: ${banError.message}`);
                }
            }
        } else {
            // –î–õ–Ø –õ–Æ–î–ï–ô: –û—Å–æ–±—ã–µ –ø—Ä–∞–≤–∏–ª–∞ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏
            
            // 1. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û–ï —Å–Ω—è—Ç–∏–µ –í–°–ï–• —Ä–æ–ª–µ–π (–æ—Å–æ–±–µ–Ω–Ω–æ –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–∏–≤–∏–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ)
            if (botMember.permissions.has(PermissionFlagsBits.ManageRoles)) {
                const rolesToRemove = member.roles.cache.filter(role =>
                    role.id !== guild.id && // –ù–µ @everyone —Ä–æ–ª—å
                    role.position < botMember.roles.highest.position // –†–æ–ª–∏ –Ω–∏–∂–µ –±–æ—Ç–∞
                );

                let rolesRemoved = 0;
                let privilegedRolesRemoved = 0;
                
                for (const role of rolesToRemove.values()) {
                    try {
                        const isPrivileged = privilegedRoles.has(role.id);
                        await member.roles.remove(role, `${reason} - ${isPrivileged ? '–ü–†–ò–í–ò–õ–ï–ì–ò–†–û–í–ê–ù–ù–ê–Ø –†–û–õ–¨' : '–æ–±—ã—á–Ω–∞—è —Ä–æ–ª—å'}`);
                        console.log(`‚úÖ –£–±—Ä–∞–Ω–∞ —Ä–æ–ª—å ${role.name} —É ${member.user.tag} ${isPrivileged ? '(–ü–†–ò–í–ò–õ–ï–ì–ò–†–û–í–ê–ù–ù–ê–Ø!)' : ''}`);
                        rolesRemoved++;
                        if (isPrivileged) privilegedRolesRemoved++;
                    } catch (roleError) {
                        console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–±—Ä–∞—Ç—å —Ä–æ–ª—å ${role.name}: ${roleError.message}`);
                    }
                }

                if (rolesRemoved > 0) {
                    console.log(`‚úÖ –£–±—Ä–∞–Ω–æ ${rolesRemoved} —Ä–æ–ª–µ–π —É ${member.user.tag} (–≤–∫–ª—é—á–∞—è ${privilegedRolesRemoved} –ø—Ä–∏–≤–∏–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö)`);
                    punishmentApplied = true;
                }
            } else {
                console.log(`‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª—è–º–∏`);
            }

            // 2. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ô –º—É—Ç –Ω–∞ 7 –¥–Ω–µ–π (–æ—Å–æ–±–µ–Ω–Ω–æ –µ—Å–ª–∏ –±—ã–ª–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏)
            if (botMember.permissions.has(PermissionFlagsBits.ModerateMembers)) {
                try {
                    // –ú—É—Ç –Ω–∞ 7 –¥–Ω–µ–π (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏)
                    const muteTime = 7 * 24 * 60 * 60 * 1000; // 7 –¥–Ω–µ–π –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
                    const fairnessReason = hasPrivileges ? 
                        `${reason} - –°–ü–†–ê–í–ï–î–õ–ò–í–û–°–¢–¨: –∏–º–µ–ª –ø—Ä–∏–≤–∏–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–æ–ª–∏` : 
                        `${reason} - –º—É—Ç –Ω–∞ 7 –¥–Ω–µ–π`;
                        
                    await member.timeout(muteTime, fairnessReason);
                    console.log(`‚úÖ –ó–∞–º—É—á–µ–Ω ${member.user.tag} –Ω–∞ 7 –¥–Ω–µ–π ${hasPrivileges ? '(–°–ü–†–ê–í–ï–î–õ–ò–í–û–°–¢–¨ –∑–∞ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏!)' : ''}`);
                    punishmentApplied = true;
                } catch (muteError) {
                    console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–º—É—Ç–∏—Ç—å ${member.user.tag}: ${muteError.message}`);
                }
            } else {
                console.log(`‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –º—É—Ç–∞`);
            }

            // 3. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏
            if (hasPrivileges) {
                console.log(`‚öñÔ∏è –°–ü–†–ê–í–ï–î–õ–ò–í–û–°–¢–¨ –û–ë–ï–°–ü–ï–ß–ï–ù–ê: ${member.user.tag} —Å –ø—Ä–∏–≤–∏–ª–µ–≥–∏—è–º–∏ –ø–æ–ª—É—á–∏–ª –ø–æ–ª–Ω–æ–µ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ`);
            }
        }

        if (!punishmentApplied) {
            console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ –∫ ${member.user.tag}`);
        } else {
            console.log(`‚úÖ –ù–∞–∫–∞–∑–∞–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ –∫ ${member.user.tag} –∑–∞: ${reason}`);
        }

    } catch (error) {
        console.log(`‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–∏ ${member.user.tag}:`, error.message);
    }
}

// –¢—Ä–µ–∫–µ—Ä –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –±–æ—Ç–æ–≤
const botInviteWarnings = new Map();

// –¢—Ä–µ–∫–µ—Ä –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –¥–ª—è –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –±–æ—Ç–æ–≤
const whitelistBotWarnings = new Map();

// –¢—Ä–µ–∫–µ—Ä –¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ –¥–ª—è —Å—Å—ã–ª–æ–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –±–æ—Ç–æ–≤ (2 –≤ –¥–µ–Ω—å)
const dailyBotLinkTracker = new Map();
const DAILY_BOT_LINK_LIMIT = 2; // 2 —Å—Å—ã–ª–∫–∏ –≤ –¥–µ–Ω—å

// –¢—Ä–µ–∫–µ—Ä –∫—É–ª–¥–∞—É–Ω–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–≤ (24 —á–∞—Å–∞)
const botAddCooldown = new Map();
const BOT_ADD_COOLDOWN = 24 * 60 * 60 * 1000; // 1 –¥–µ–Ω—å –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π
client.on('messageCreate', async (message) => {
    if (message.author.bot) return;
    if (isWhitelisted(message.author.id)) return;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Å—ã–ª–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –±–æ—Ç–æ–≤
    const botInviteRegex = /(?:discord\.com\/oauth2\/authorize|discordapp\.com\/oauth2\/authorize)/i;
    if (botInviteRegex.test(message.content)) {
        console.log(`üö® –û–ë–ù–ê–†–£–ñ–ï–ù–ê –°–°–´–õ–ö–ê –ù–ê –ë–û–¢–ê –æ—Ç ${message.author.tag}: ${message.content}`);
        
        // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.delete().catch(() => {});
        
        // –°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –î–õ–Ø –ë–ï–õ–û–ì–û –°–ü–ò–°–ö–ê
        if (isWhitelisted(message.author.id)) {
            console.log(`üö® –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –ò–ó –ë–ï–õ–û–ì–û –°–ü–ò–°–ö–ê –æ—Ç–ø—Ä–∞–≤–∏–ª —Å—Å—ã–ª–∫—É –Ω–∞ –±–æ—Ç–∞: ${message.author.tag}`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –¥–ª—è –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞
            const whitelistWarnings = whitelistBotWarnings.get(message.author.id) || 0;
            
            if (whitelistWarnings === 0) {
                // –ü–µ—Ä–≤–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞
                whitelistBotWarnings.set(message.author.id, 1);
                
                try {
                    await message.author.send(`‚ö†Ô∏è **–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï (–ë–ï–õ–´–ô –°–ü–ò–°–û–ö)**\n\n–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å—Å—ã–ª–∫—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä "${message.guild.name}". –î–∞–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞ –Ω–µ –º–æ–≥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–≤ —á–µ—Ä–µ–∑ —Å—Å—ã–ª–∫–∏!\n\nüî∏ –≠—Ç–æ –≤–∞—à–µ –ø–µ—Ä–≤–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ\nüî∏ –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü —Å–µ—Ä–≤–µ—Ä–∞ –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–≤\nüî∏ –ü—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–µ –≤—ã –±—É–¥–µ—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω—ã –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∏ –ø–æ–ª—É—á–∏—Ç–µ –º—É—Ç –Ω–∞ 7 –¥–Ω–µ–π —Å –∫—É–ª–¥–∞—É–Ω–æ–º –≤ 1 –¥–µ–Ω—å\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ.`);
                    console.log(`‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–µ—Ä–≤–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞ ${message.author.tag}`);
                } catch (dmError) {
                    console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ ${message.author.tag}: ${dmError.message}`);
                }
            } else {
                // –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞
                console.log(`üö® –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï –ò–ó –ë–ï–õ–û–ì–û –°–ü–ò–°–ö–ê: ${message.author.tag} –ø–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª —Å—Å—ã–ª–∫—É –Ω–∞ –±–æ—Ç–∞`);
                
                // –ò—Å–∫–ª—é—á–∞–µ–º –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞
                const index = settings.whitelist.indexOf(message.author.id);
                if (index !== -1) {
                    settings.whitelist.splice(index, 1);
                    saveSettings();
                    console.log(`‚úÖ ${message.author.tag} –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∑–∞ –ø–æ–≤—Ç–æ—Ä–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å—Å—ã–ª–∫–∏ –Ω–∞ –±–æ—Ç–∞`);
                }
                
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—É–ª–¥–∞—É–Ω –Ω–∞ 1 –¥–µ–Ω—å
                botAddCooldown.set(message.author.id, Date.now());
                
                try {
                    await message.author.send(`üö´ **–ò–°–ö–õ–Æ–ß–ï–ù–ò–ï –ò–ó –ë–ï–õ–û–ì–û –°–ü–ò–°–ö–ê**\n\n–í—ã –±—ã–ª–∏ –∏—Å–∫–ª—é—á–µ–Ω—ã –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ "${message.guild.name}" –∑–∞ –ø–æ–≤—Ç–æ—Ä–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å—Å—ã–ª–∫–∏ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞ –ø–æ—Å–ª–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è!\n\nüî∏ –í—ã –±–æ–ª—å—à–µ –Ω–µ –≤ –ø—Ä–∏–≤–∏–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ\nüî∏ –ü–æ–ª—É—á–∏–ª–∏ –º—É—Ç –Ω–∞ 7 –¥–Ω–µ–π –∏ —Å–Ω—è—Ç—ã –≤—Å–µ —Ä–æ–ª–∏\nüî∏ –ö—É–ª–¥–∞—É–Ω –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–≤: 1 –¥–µ–Ω—å\nüî∏ –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü —Å–µ—Ä–≤–µ—Ä–∞ –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–≤\n\n–í–∞—à–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –æ—Ç–æ–∑–≤–∞–Ω—ã.`);
                } catch (dmError) {
                    console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏—Å–∫–ª—é—á–µ–Ω–∏–∏ ${message.author.tag}: ${dmError.message}`);
                }
                
                // –ù–∞–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await punishUser(message.guild, message.author, '–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ –±–æ—Ç–∞ (–∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞)');
                whitelistBotWarnings.delete(message.author.id); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
            }
            return;
        }
        
        // –ü–†–û–í–ï–†–ö–ê –î–ù–ï–í–ù–û–ì–û –õ–ò–ú–ò–¢–ê (2 —Å—Å—ã–ª–∫–∏ –≤ –¥–µ–Ω—å)
        if (checkDailyBotLinkLimit(message.author.id)) {
            console.log(`üö® –î–ù–ï–í–ù–û–ô –õ–ò–ú–ò–¢ –°–°–´–õ–û–ö –ü–†–ï–í–´–®–ï–ù! –ú—É—Ç –¥–ª—è ${message.author.tag}`);
            
            try {
                await message.author.send(`üö´ **–ú–£–¢ –ó–ê –ü–†–ï–í–´–®–ï–ù–ò–ï –õ–ò–ú–ò–¢–ê**\n\n–í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Å—ã–ª–æ–∫ –Ω–∞ –±–æ—Ç–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ "${message.guild.name}"!\n\nüî∏ –õ–∏–º–∏—Ç: 2 —Å—Å—ã–ª–∫–∏ –≤ –¥–µ–Ω—å\nüî∏ –ü–æ–ª—É—á–∏–ª–∏ –º—É—Ç –Ω–∞ 7 –¥–Ω–µ–π –∏ —Å–Ω—è—Ç—ã –≤—Å–µ —Ä–æ–ª–∏\nüî∏ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≤—Ç—Ä–∞\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞.`);
            } catch (dmError) {
                console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞ ${message.author.tag}: ${dmError.message}`);
            }
            
            await punishUser(message.guild, message.author, '–ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ —Å—Å—ã–ª–æ–∫ –Ω–∞ –±–æ—Ç–æ–≤ (2 –≤ –¥–µ–Ω—å)');
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
        const warnings = botInviteWarnings.get(message.author.id) || 0;
        
        if (warnings === 0) {
            // –ü–µ—Ä–≤–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
            botInviteWarnings.set(message.author.id, 1);
            
            try {
                await message.author.send(`‚ö†Ô∏è **–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï**\n\n–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å—Å—ã–ª–∫—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä "${message.guild.name}". –≠—Ç–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ!\n\nüî∏ –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü —Å–µ—Ä–≤–µ—Ä–∞ –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–≤\nüî∏ –õ–∏–º–∏—Ç: 2 —Å—Å—ã–ª–∫–∏ –≤ –¥–µ–Ω—å\nüî∏ –ü—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –º—É—Ç –Ω–∞ 7 –¥–Ω–µ–π\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ.`);
                console.log(`‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ ${message.author.tag} –∑–∞ —Å—Å—ã–ª–∫—É –Ω–∞ –±–æ—Ç–∞`);
            } catch (dmError) {
                console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ ${message.author.tag}: ${dmError.message}`);
            }
        } else {
            // –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ - –º—É—Ç
            console.log(`üö® –ü–û–í–¢–û–†–ù–ê–Ø –°–°–´–õ–ö–ê –ù–ê –ë–û–¢–ê! –ú—É—Ç –¥–ª—è ${message.author.tag}`);
            
            try {
                await message.author.send(`üö´ **–ú–£–¢ –ù–ê 7 –î–ù–ï–ô**\n\n–í—ã –ø–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å—Å—ã–ª–∫—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä "${message.guild.name}" –ø–æ—Å–ª–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è.\n\n–í—ã –ø–æ–ª—É—á–∏–ª–∏ –º—É—Ç –Ω–∞ 7 –¥–Ω–µ–π. –í—Å–µ –≤–∞—à–∏ —Ä–æ–ª–∏ —Ç–∞–∫–∂–µ —Å–Ω—è—Ç—ã.`);
            } catch (dmError) {
                console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –º—É—Ç–µ ${message.author.tag}: ${dmError.message}`);
            }
            
            await punishUser(message.guild, message.author, '–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞');
            botInviteWarnings.delete(message.author.id); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ—Å–ª–µ –Ω–∞–∫–∞–∑–∞–Ω–∏—è
        }
        return;
    }

    if (!settings.mentionProtection.enabled) return;

    // –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∞–º–∞
    if (instantCheck(message.author.id)) {
        console.log(`‚ö° –°–ü–ê–ú –°–û–û–ë–©–ï–ù–ò–ô! –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –±–∞–Ω ${message.author.tag}`);
        await message.delete().catch(() => {});
        await punishUser(message.guild, message.author, '–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π —Å–ø–∞–º —Å–æ–æ–±—â–µ–Ω–∏–π');
        return;
    }

    const mentions = message.mentions.users.size + message.mentions.roles.size + (message.mentions.everyone ? 1 : 0);

    if (mentions >= settings.mentionProtection.maxMentions) {
        await message.delete().catch(() => {});
        await punishUser(message.guild, message.author, '–°–ø–∞–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–π');
    }
});

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
client.on('messageDelete', async (message) => {
    if (!message.guild || !message.author) return;
    
    const auditLogs = await message.guild.fetchAuditLogs({
        type: AuditLogEvent.MessageDelete,
        limit: 1
    });

    const entry = auditLogs.entries.first();
    if (!entry || isWhitelisted(entry.executor.id)) return;

    const isBot = entry.executor.bot;

    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏–π (—Ç–µ–ø–µ—Ä—å –∑–∞ 1 —Å–µ–∫—É–Ω–¥—É)
    if (trackDeletion(entry.executor.id, '—Å–æ–æ–±—â–µ–Ω–∏–µ')) {
        console.log(`üö® –ë–ê–ù –ó–ê –£–î–ê–õ–ï–ù–ò–Ø: ${entry.executor.tag} –ø—Ä–µ–≤—ã—Å–∏–ª –ª–∏–º–∏—Ç —É–¥–∞–ª–µ–Ω–∏–π –∑–∞ —Å–µ–∫—É–Ω–¥—É`);
        await punishUser(message.guild, entry.executor, `–ü–†–ï–í–´–®–ï–ù –õ–ò–ú–ò–¢: 2+ —É–¥–∞–ª–µ–Ω–∏–π –∑–∞ —Å–µ–∫—É–Ω–¥—É`);
        return;
    }

    // –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∞–º–∞ (—Ä–∞–∑–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫–Ω–∞ –¥–ª—è –±–æ—Ç–æ–≤ –∏ –ª—é–¥–µ–π)
    if (instantCheck(entry.executor.id, isBot)) {
        const timeWindow = isBot ? '500–º—Å' : '1 —Å–µ–∫';
        console.log(`‚ö° –ú–ì–ù–û–í–ï–ù–ù–´–ô –ë–ê–ù –∑–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π: ${entry.executor.tag} (${timeWindow})`);
        await punishUser(message.guild, entry.executor, `–ú–ì–ù–û–í–ï–ù–ù–ê–Ø –ö–†–ê–®-–ê–¢–ê–ö–ê: –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π (${timeWindow})`);
    }
});

// –£–ª—å—Ç—Ä–∞–±—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –∫—Ä–∞—à-–∞—Ç–∞–∫
async function ultraFastDetection(guild, executor) {
    if (isWhitelisted(executor.id)) return false;
    
    // –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑ –∞—É–¥–∏—Ç –ª–æ–≥–æ–≤
    return instantCheck(executor.id);
}

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤ —Å –∫—É–ª–¥–∞—É–Ω–æ–º –∏ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π —Ä–µ–∞–∫—Ü–∏–µ–π
client.on('channelCreate', async (channel) => {
    if (!settings.channelProtection.enabled) return;

    const auditLogs = await channel.guild.fetchAuditLogs({
        type: AuditLogEvent.ChannelCreate,
        limit: 1
    });

    const entry = auditLogs.entries.first();
    if (!entry) return;

    const isBot = entry.executor.bot;

    // –ï—Å–ª–∏ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ - —Ä–∞–∑—Ä–µ—à–∞–µ–º
    if (isWhitelisted(entry.executor.id)) return;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–Ω–µ –±–æ—Ç–æ–≤)
    if (!isBot && checkCooldown(entry.executor.id, '—Å–æ–∑–¥–∞–Ω–∏–µ_–∫–∞–Ω–∞–ª–∞')) {
        console.log(`‚è∞ –£–î–ê–õ–ï–ù–ò–ï –ö–ê–ù–ê–õ–ê –∏–∑-–∑–∞ –∫—É–ª–¥–∞—É–Ω–∞: ${channel.name} –æ—Ç ${entry.executor.tag}`);
        await channel.delete().catch(() => {});
        await punishUser(channel.guild, entry.executor, '–ù–∞—Ä—É—à–µ–Ω–∏–µ –∫—É–ª–¥–∞—É–Ω–∞: —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ —Ä–∞–Ω—å—à–µ —á–µ–º —á–µ—Ä–µ–∑ –¥–µ–Ω—å');
        return;
    }

    // –£–õ–¨–¢–†–ê–ë–´–°–¢–†–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ (—Ä–∞–∑–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫–Ω–∞)
    if (instantCheck(entry.executor.id, isBot)) {
        const timeWindow = isBot ? '500–º—Å' : '1 —Å–µ–∫';
        console.log(`‚ö° –ú–ì–ù–û–í–ï–ù–ù–û–ï –£–î–ê–õ–ï–ù–ò–ï –∫–∞–Ω–∞–ª–∞ ${channel.name} –æ—Ç ${entry.executor.tag} (${timeWindow})`);
        await channel.delete().catch(() => {});
        await punishUser(channel.guild, entry.executor, `–£–õ–¨–¢–†–ê–ë–´–°–¢–†–ê–Ø –ö–†–ê–®-–ê–¢–ê–ö–ê - —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ (${timeWindow})`);
        return;
    }
});

client.on('roleCreate', async (role) => {
    if (!settings.roleProtection.enabled) return;

    // –ú–ì–ù–û–í–ï–ù–ù–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω –ø—Ä–∞–≤ –ë–ï–ó –æ–∂–∏–¥–∞–Ω–∏—è –∞—É–¥–∏—Ç –ª–æ–≥–æ–≤
    if (role.permissions.has(PermissionFlagsBits.Administrator)) {
        // –ü–æ–ª—É—á–∞–µ–º –∞—É–¥–∏—Ç –ª–æ–≥–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—è
        const auditLogs = await role.guild.fetchAuditLogs({
            type: AuditLogEvent.RoleCreate,
            limit: 1
        });

        const entry = auditLogs.entries.first();
        if (entry && !isWhitelisted(entry.executor.id)) {
            console.log(`‚ö° –ú–ì–ù–û–í–ï–ù–ù–û–ï –£–î–ê–õ–ï–ù–ò–ï –ê–î–ú–ò–ù –†–û–õ–ò –æ—Ç –Ω–µ-–±–µ–ª–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${entry.executor.tag}: ${role.name}`);
            await role.delete().catch(() => {});
            await punishUser(role.guild, entry.executor, '–°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–∏ —Å –∞–¥–º–∏–Ω –ø—Ä–∞–≤–∞–º–∏ (–Ω–µ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ)');
            return;
        }
    }

    const auditLogs = await role.guild.fetchAuditLogs({
        type: AuditLogEvent.RoleCreate,
        limit: 1
    });

    const entry = auditLogs.entries.first();
    if (!entry) return;

    const isBot = entry.executor.bot;

    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ - —Ä–∞–∑—Ä–µ—à–∞–µ–º
    if (isWhitelisted(entry.executor.id)) return;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–Ω–µ –±–æ—Ç–æ–≤)
    if (!isBot && checkCooldown(entry.executor.id, '—Å–æ–∑–¥–∞–Ω–∏–µ_—Ä–æ–ª–∏')) {
        console.log(`‚è∞ –£–î–ê–õ–ï–ù–ò–ï –†–û–õ–ò –∏–∑-–∑–∞ –∫—É–ª–¥–∞—É–Ω–∞: ${role.name} –æ—Ç ${entry.executor.tag}`);
        await role.delete().catch(() => {});
        await punishUser(role.guild, entry.executor, '–ù–∞—Ä—É—à–µ–Ω–∏–µ –∫—É–ª–¥–∞—É–Ω–∞: —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–∏ —Ä–∞–Ω—å—à–µ —á–µ–º —á–µ—Ä–µ–∑ –¥–µ–Ω—å');
        return;
    }

    // –£–õ–¨–¢–†–ê–ë–´–°–¢–†–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —Å–ø–∞–º–∞ —Ä–æ–ª–µ–π (—Ä–∞–∑–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫–Ω–∞)
    if (instantCheck(entry.executor.id, isBot)) {
        const timeWindow = isBot ? '500–º—Å' : '1 —Å–µ–∫';
        console.log(`‚ö° –ú–ì–ù–û–í–ï–ù–ù–û–ï –£–î–ê–õ–ï–ù–ò–ï —Ä–æ–ª–∏ ${role.name} –æ—Ç ${entry.executor.tag} (${timeWindow})`);
        await role.delete().catch(() => {});
        await punishUser(role.guild, entry.executor, `–£–õ–¨–¢–†–ê–ë–´–°–¢–†–ê–Ø –ö–†–ê–®-–ê–¢–ê–ö–ê - —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–µ–π (${timeWindow})`);
        return;
    }
});

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–æ–ª–µ–π (–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω –ø—Ä–∞–≤)
client.on('roleUpdate', async (oldRole, newRole) => {
    if (!settings.roleProtection.enabled) return;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∏ –ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –∞–¥–º–∏–Ω –ø—Ä–∞–≤–∞
    if (!oldRole.permissions.has(PermissionFlagsBits.Administrator) && 
        newRole.permissions.has(PermissionFlagsBits.Administrator)) {
        
        const auditLogs = await newRole.guild.fetchAuditLogs({
            type: AuditLogEvent.RoleUpdate,
            limit: 1
        });

        const entry = auditLogs.entries.first();
        if (!entry) return;

        // –ï—Å–ª–∏ –æ–±–Ω–æ–≤–ª—è—é—â–∏–π –ù–ï –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ - –æ—Ç–º–µ–Ω—è–µ–º –∞–¥–º–∏–Ω –ø—Ä–∞–≤–∞ –∏ –Ω–∞–∫–∞–∑—ã–≤–∞–µ–º
        if (!isWhitelisted(entry.executor.id)) {
            console.log(`üö® –ë–õ–û–ö–ò–†–û–í–ö–ê –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω –ø—Ä–∞–≤ –∫ —Ä–æ–ª–∏ ${newRole.name} –æ—Ç ${entry.executor.tag}`);
            await newRole.setPermissions(oldRole.permissions, '–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω –ø—Ä–∞–≤ (–Ω–µ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ)').catch(() => {});
            await punishUser(newRole.guild, entry.executor, '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω –ø—Ä–∞–≤ –∫ —Ä–æ–ª–∏ (–Ω–µ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ)');
        }
    }
});

// –û—Ç–¥–µ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
client.on('channelCreate', async (channel) => {
    if (channel.type !== ChannelType.GuildCategory || !settings.categoryProtection.enabled) return;

    const auditLogs = await channel.guild.fetchAuditLogs({
        type: AuditLogEvent.ChannelCreate,
        limit: 1
    });

    const entry = auditLogs.entries.first();
    if (!entry) return;

    const isBot = entry.executor.bot;

    // –ï—Å–ª–∏ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ - —Ä–∞–∑—Ä–µ—à–∞–µ–º
    if (isWhitelisted(entry.executor.id)) return;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–Ω–µ –±–æ—Ç–æ–≤)
    if (!isBot && checkCooldown(entry.executor.id, '—Å–æ–∑–¥–∞–Ω–∏–µ_–∫–∞—Ç–µ–≥–æ—Ä–∏–∏')) {
        console.log(`‚è∞ –£–î–ê–õ–ï–ù–ò–ï –ö–ê–¢–ï–ì–û–†–ò–ò –∏–∑-–∑–∞ –∫—É–ª–¥–∞—É–Ω–∞: ${channel.name} –æ—Ç ${entry.executor.tag}`);
        await channel.delete().catch(() => {});
        await punishUser(channel.guild, entry.executor, '–ù–∞—Ä—É—à–µ–Ω–∏–µ –∫—É–ª–¥–∞—É–Ω–∞: —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞–Ω—å—à–µ —á–µ–º —á–µ—Ä–µ–∑ –¥–µ–Ω—å');
        return;
    }

    // –£–õ–¨–¢–†–ê–ë–´–°–¢–†–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ (—Ä–∞–∑–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫–Ω–∞)
    if (instantCheck(entry.executor.id, isBot)) {
        const timeWindow = isBot ? '500–º—Å' : '1 —Å–µ–∫';
        console.log(`‚ö° –ú–ì–ù–û–í–ï–ù–ù–û–ï –£–î–ê–õ–ï–ù–ò–ï –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${channel.name} –æ—Ç ${entry.executor.tag} (${timeWindow})`);
        await channel.delete().catch(() => {});
        await punishUser(channel.guild, entry.executor, `–£–õ–¨–¢–†–ê–ë–´–°–¢–†–ê–Ø –ö–†–ê–®-–ê–¢–ê–ö–ê - —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (${timeWindow})`);
        return;
    }
});

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤ —Å –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π —Ä–µ–∞–∫—Ü–∏–µ–π
client.on('channelDelete', async (channel) => {
    const auditLogs = await channel.guild.fetchAuditLogs({
        type: AuditLogEvent.ChannelDelete,
        limit: 1
    });

    const entry = auditLogs.entries.first();
    if (!entry || isWhitelisted(entry.executor.id)) return;

    const isBot = entry.executor.bot;

    // –î–ª—è –ª—é–¥–µ–π (–Ω–µ –±–æ—Ç–æ–≤) - –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ —É–¥–∞–ª–µ–Ω–∏–π
    if (!isBot && checkDailyDeletionLimit(entry.executor.id)) {
        console.log(`üö® –î–ù–ï–í–ù–û–ô –õ–ò–ú–ò–¢ –£–î–ê–õ–ï–ù–ò–ô –ü–†–ï–í–´–®–ï–ù: ${entry.executor.tag} —É–¥–∞–ª–∏–ª –∫–∞–Ω–∞–ª ${channel.name}`);
        await punishUser(channel.guild, entry.executor, '–ü—Ä–µ–≤—ã—à–µ–Ω –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç —É–¥–∞–ª–µ–Ω–∏–π (2 –≤ –¥–µ–Ω—å) - –º—É—Ç –Ω–∞ 7 –¥–Ω–µ–π');
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–Ω–µ –±–æ—Ç–æ–≤)
    if (!isBot && checkCooldown(entry.executor.id, '—É–¥–∞–ª–µ–Ω–∏–µ_–∫–∞–Ω–∞–ª–∞')) {
        console.log(`‚è∞ –ù–ê–ö–ê–ó–ê–ù–ò–ï –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –∫—É–ª–¥–∞—É–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞: ${entry.executor.tag}`);
        await punishUser(channel.guild, entry.executor, '–ù–∞—Ä—É—à–µ–Ω–∏–µ –∫—É–ª–¥–∞—É–Ω–∞: —É–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ —Ä–∞–Ω—å—à–µ —á–µ–º —á–µ—Ä–µ–∑ –¥–µ–Ω—å');
        return;
    }

    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏–π (—Ç–µ–ø–µ—Ä—å –∑–∞ 1 —Å–µ–∫—É–Ω–¥—É)
    if (trackDeletion(entry.executor.id, '–∫–∞–Ω–∞–ª')) {
        console.log(`üö® –ë–ê–ù –ó–ê –£–î–ê–õ–ï–ù–ò–Ø: ${entry.executor.tag} –ø—Ä–µ–≤—ã—Å–∏–ª –ª–∏–º–∏—Ç —É–¥–∞–ª–µ–Ω–∏–π –∑–∞ —Å–µ–∫—É–Ω–¥—É`);
        await punishUser(channel.guild, entry.executor, `–ü–†–ï–í–´–®–ï–ù –õ–ò–ú–ò–¢: 2+ —É–¥–∞–ª–µ–Ω–∏–π –∑–∞ —Å–µ–∫—É–Ω–¥—É`);
        return;
    }

    // –£–õ–¨–¢–†–ê–ë–´–°–¢–†–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ (—Ä–∞–∑–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫–Ω–∞)
    if (instantCheck(entry.executor.id, isBot)) {
        const timeWindow = isBot ? '500–º—Å' : '1 —Å–µ–∫';
        console.log(`‚ö° –ú–ì–ù–û–í–ï–ù–ù–´–ô –ë–ê–ù –∑–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤: ${entry.executor.tag} (${timeWindow})`);
        await punishUser(channel.guild, entry.executor, `–£–õ–¨–¢–†–ê–ë–´–°–¢–†–ê–Ø –ö–†–ê–®-–ê–¢–ê–ö–ê: –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ (${timeWindow})`);
    }
});

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É–¥–∞–ª–µ–Ω–∏—è —Ä–æ–ª–µ–π —Å –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π —Ä–µ–∞–∫—Ü–∏–µ–π  
client.on('roleDelete', async (role) => {
    const auditLogs = await role.guild.fetchAuditLogs({
        type: AuditLogEvent.RoleDelete,
        limit: 1
    });

    const entry = auditLogs.entries.first();
    if (!entry || isWhitelisted(entry.executor.id)) return;

    const isBot = entry.executor.bot;

    // –î–ª—è –ª—é–¥–µ–π (–Ω–µ –±–æ—Ç–æ–≤) - –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ —É–¥–∞–ª–µ–Ω–∏–π
    if (!isBot && checkDailyDeletionLimit(entry.executor.id)) {
        console.log(`üö® –î–ù–ï–í–ù–û–ô –õ–ò–ú–ò–¢ –£–î–ê–õ–ï–ù–ò–ô –ü–†–ï–í–´–®–ï–ù: ${entry.executor.tag} —É–¥–∞–ª–∏–ª —Ä–æ–ª—å ${role.name}`);
        await punishUser(role.guild, entry.executor, '–ü—Ä–µ–≤—ã—à–µ–Ω –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç —É–¥–∞–ª–µ–Ω–∏–π (2 –≤ –¥–µ–Ω—å) - –º—É—Ç –Ω–∞ 7 –¥–Ω–µ–π');
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–Ω–µ –±–æ—Ç–æ–≤)
    if (!isBot && checkCooldown(entry.executor.id, '—É–¥–∞–ª–µ–Ω–∏–µ_—Ä–æ–ª–∏')) {
        console.log(`‚è∞ –ù–ê–ö–ê–ó–ê–ù–ò–ï –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –∫—É–ª–¥–∞—É–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ä–æ–ª–∏: ${entry.executor.tag}`);
        await punishUser(role.guild, entry.executor, '–ù–∞—Ä—É—à–µ–Ω–∏–µ –∫—É–ª–¥–∞—É–Ω–∞: —É–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ —Ä–∞–Ω—å—à–µ —á–µ–º —á–µ—Ä–µ–∑ –¥–µ–Ω—å');
        return;
    }

    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏–π (—Ç–µ–ø–µ—Ä—å –∑–∞ 1 —Å–µ–∫—É–Ω–¥—É)
    if (trackDeletion(entry.executor.id, '—Ä–æ–ª—å')) {
        console.log(`üö® –ë–ê–ù –ó–ê –£–î–ê–õ–ï–ù–ò–Ø: ${entry.executor.tag} –ø—Ä–µ–≤—ã—Å–∏–ª –ª–∏–º–∏—Ç —É–¥–∞–ª–µ–Ω–∏–π –∑–∞ —Å–µ–∫—É–Ω–¥—É`);
        await punishUser(role.guild, entry.executor, `–ü–†–ï–í–´–®–ï–ù –õ–ò–ú–ò–¢: 2+ —É–¥–∞–ª–µ–Ω–∏–π –∑–∞ —Å–µ–∫—É–Ω–¥—É`);
        return;
    }

    // –£–õ–¨–¢–†–ê–ë–´–°–¢–†–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ (—Ä–∞–∑–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫–Ω–∞)
    if (instantCheck(entry.executor.id, isBot)) {
        const timeWindow = isBot ? '500–º—Å' : '1 —Å–µ–∫';
        console.log(`‚ö° –ú–ì–ù–û–í–ï–ù–ù–´–ô –ë–ê–ù –∑–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π: ${entry.executor.tag} (${timeWindow})`);
        await punishUser(role.guild, entry.executor, `–£–õ–¨–¢–†–ê–ë–´–°–¢–†–ê–Ø –ö–†–ê–®-–ê–¢–ê–ö–ê: –£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π (${timeWindow})`);
    }
});

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±–∞–Ω–æ–≤ —Å –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –¥–æ—Å—Ç—É–ø–∞
client.on('guildBanAdd', async (ban) => {
    const auditLogs = await ban.guild.fetchAuditLogs({
        type: AuditLogEvent.MemberBanAdd,
        limit: 1
    });

    const entry = auditLogs.entries.first();
    if (!entry) return;

    const isBot = entry.executor.bot;

    // –ï—Å–ª–∏ –±–∞–Ω—è—â–∏–π –ù–ï –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ - —Ä–∞–∑–±–∞–Ω–∏—Ç—å –∂–µ—Ä—Ç–≤—É –∏ –Ω–∞–∫–∞–∑–∞—Ç—å –±–∞–Ω—è—â–µ–≥–æ
    if (!isWhitelisted(entry.executor.id)) {
        console.log(`üö® –ù–ï–°–ê–ù–ö–¶–ò–û–ù–ò–†–û–í–ê–ù–ù–´–ô –ë–ê–ù! ${entry.executor.tag} –∑–∞–±–∞–Ω–∏–ª ${ban.user.tag} –±–µ–∑ –ø—Ä–∞–≤`);
        
        try {
            // –†–∞–∑–±–∞–Ω–∏–≤–∞–µ–º –∂–µ—Ä—Ç–≤—É
            await ban.guild.members.unban(ban.user.id, '–ù–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–∞–Ω - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–±–∞–Ω');
            console.log(`‚úÖ –†–∞–∑–±–∞–Ω–µ–Ω ${ban.user.tag}`);
            
            // –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            let inviteLink = null;
            try {
                const channels = ban.guild.channels.cache.filter(channel => 
                    channel.type === ChannelType.GuildText && 
                    channel.permissionsFor(ban.guild.members.me).has(PermissionFlagsBits.CreateInstantInvite)
                );
                
                if (channels.size > 0) {
                    const invite = await channels.first().createInvite({
                        maxAge: 0, // –ë–µ—Å—Å—Ä–æ—á–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
                        maxUses: 1, // –û–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
                        reason: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ—Å–ª–µ –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –±–∞–Ω–∞'
                    });
                    inviteLink = invite.url;
                }
            } catch (inviteError) {
                console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ: ${inviteError.message}`);
            }
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –õ–° —Ä–∞–∑–±–∞–Ω–µ–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            try {
                // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–π –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                const fullUser = await client.users.fetch(ban.user.id);
                
                const apologyMessage = `‚úÖ **–ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –†–ê–ó–ë–ê–ù**\n\n–í—ã –±—ã–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–±–∞–Ω–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ "${ban.guild.name}" –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –∏–º–µ–ª –Ω–∞ —ç—Ç–æ –ø—Ä–∞–≤–∞.\n\nüî∏ –ë–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω\nüî∏ –ù–∞—Ä—É—à–∏—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª –Ω–∞–∫–∞–∑–∞–Ω–∏–µ`;
                const inviteMessage = inviteLink ? `\n\nüîó –í—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ: ${inviteLink}` : '';
                
                await fullUser.send(apologyMessage + inviteMessage);
                console.log(`‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–∑–≤–∏–Ω–µ–Ω–∏–µ ${fullUser.tag}`);
            } catch (dmError) {
                console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–° ${ban.user.tag}: ${dmError.message}`);
                
                // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
                if (dmError.code === 50007) {
                    console.log(`   –ü—Ä–∏—á–∏–Ω–∞: –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–∫—Ä—ã—Ç—ã –õ–°`);
                } else if (dmError.code === 50013) {
                    console.log(`   –ü—Ä–∏—á–∏–Ω–∞: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤`);
                } else {
                    console.log(`   –ö–æ–¥ –æ—à–∏–±–∫–∏: ${dmError.code}`);
                }
            }
            
        } catch (unbanError) {
            console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–±–∞–Ω–∏—Ç—å ${ban.user.tag}: ${unbanError.message}`);
        }
        
        // –ù–∞–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–≥–æ, –∫—Ç–æ –¥–∞–ª –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–∞–Ω
        await punishUser(ban.guild, entry.executor, '–ù–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–∞–Ω (–Ω–µ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ) - –º—É—Ç –Ω–∞ 7 –¥–Ω–µ–π');
        return;
    }

    // –ï—Å–ª–∏ –±–∞–Ω—è—â–∏–π –í –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –∫—Ä–∞—à-–∞—Ç–∞–∫–∏
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏–π (–±–∞–Ω—ã —Å—á–∏—Ç–∞—é—Ç—Å—è –∫–∞–∫ —É–¥–∞–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)
    if (trackDeletion(entry.executor.id, '—É—á–∞—Å—Ç–Ω–∏–∫ (–±–∞–Ω)')) {
        console.log(`üö® –ë–ê–ù –ó–ê –£–î–ê–õ–ï–ù–ò–Ø: ${entry.executor.tag} –ø—Ä–µ–≤—ã—Å–∏–ª –ª–∏–º–∏—Ç —É–¥–∞–ª–µ–Ω–∏–π –∑–∞ —Å–µ–∫—É–Ω–¥—É`);
        await punishUser(ban.guild, entry.executor, `–ü–†–ï–í–´–®–ï–ù –õ–ò–ú–ò–¢: 2+ —É–¥–∞–ª–µ–Ω–∏–π –∑–∞ —Å–µ–∫—É–Ω–¥—É`);
        return;
    }

    // –£–õ–¨–¢–†–ê–ë–´–°–¢–†–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ (—Ä–∞–∑–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫–Ω–∞)
    if (instantCheck(entry.executor.id, isBot)) {
        const timeWindow = isBot ? '500–º—Å' : '1 —Å–µ–∫';
        console.log(`‚ö° –ú–ì–ù–û–í–ï–ù–ù–´–ô –ë–ê–ù –∑–∞ –º–∞—Å—Å–æ–≤—ã–µ –±–∞–Ω—ã: ${entry.executor.tag} (${timeWindow})`);
        await punishUser(ban.guild, entry.executor, `–£–õ–¨–¢–†–ê–ë–´–°–¢–†–ê–Ø –ö–†–ê–®-–ê–¢–ê–ö–ê: –ú–∞—Å—Å–æ–≤—ã–µ –±–∞–Ω—ã (${timeWindow})`);
    }
});

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–∏–∫–æ–≤ —Å –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π —Ä–µ–∞–∫—Ü–∏–µ–π
client.on('guildMemberRemove', async (member) => {
    const auditLogs = await member.guild.fetchAuditLogs({
        type: AuditLogEvent.MemberKick,
        limit: 1
    });

    const entry = auditLogs.entries.first();
    if (!entry || entry.target.id !== member.id || isWhitelisted(entry.executor.id)) return;

    const isBot = entry.executor.bot;

    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏–π (–∫–∏–∫–∏ —Å—á–∏—Ç–∞—é—Ç—Å—è –∫–∞–∫ —É–¥–∞–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)
    if (trackDeletion(entry.executor.id, '—É—á–∞—Å—Ç–Ω–∏–∫ (–∫–∏–∫)')) {
        console.log(`üö® –ë–ê–ù –ó–ê –£–î–ê–õ–ï–ù–ò–Ø: ${entry.executor.tag} –ø—Ä–µ–≤—ã—Å–∏–ª –ª–∏–º–∏—Ç —É–¥–∞–ª–µ–Ω–∏–π –∑–∞ —Å–µ–∫—É–Ω–¥—É`);
        await punishUser(member.guild, entry.executor, `–ü–†–ï–í–´–®–ï–ù –õ–ò–ú–ò–¢: 2+ —É–¥–∞–ª–µ–Ω–∏–π –∑–∞ —Å–µ–∫—É–Ω–¥—É`);
        return;
    }

    // –£–õ–¨–¢–†–ê–ë–´–°–¢–†–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ (—Ä–∞–∑–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫–Ω–∞)
    if (instantCheck(entry.executor.id, isBot)) {
        const timeWindow = isBot ? '500–º—Å' : '1 —Å–µ–∫';
        console.log(`‚ö° –ú–ì–ù–û–í–ï–ù–ù–´–ô –ë–ê–ù –∑–∞ –º–∞—Å—Å–æ–≤—ã–µ –∫–∏–∫–∏: ${entry.executor.tag} (${timeWindow})`);
        await punishUser(member.guild, entry.executor, `–£–õ–¨–¢–†–ê–ë–´–°–¢–†–ê–Ø –ö–†–ê–®-–ê–¢–ê–ö–ê: –ú–∞—Å—Å–æ–≤—ã–µ –∫–∏–∫–∏ (${timeWindow})`);
    }
});

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–≤
client.on('guildMemberAdd', async (member) => {
    if (!member.user.bot) return;

    const auditLogs = await member.guild.fetchAuditLogs({
        type: AuditLogEvent.BotAdd,
        limit: 1
    });

    const entry = auditLogs.entries.first();
    if (!entry) return;

    // –°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê: –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª—è—é—â–∏–π –í –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ - —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
    if (isWhitelisted(entry.executor.id)) {
        console.log(`üö® –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –ò–ó –ë–ï–õ–û–ì–û –°–ü–ò–°–ö–ê –¥–æ–±–∞–≤–∏–ª –±–æ—Ç–∞: ${entry.executor.tag}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—É–ª–¥–∞—É–Ω
        const lastBotAdd = botAddCooldown.get(entry.executor.id);
        if (lastBotAdd && Date.now() - lastBotAdd < BOT_ADD_COOLDOWN) {
            const remainingTime = Math.ceil((BOT_ADD_COOLDOWN - (Date.now() - lastBotAdd)) / (60 * 60 * 1000));
            console.log(`‚è∞ –ö–£–õ–î–ê–£–ù! ${entry.executor.tag} –ø–æ–ø—ã—Ç–∞–ª—Å—è –¥–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞, –æ—Å—Ç–∞–ª–æ—Å—å ${remainingTime} —á–∞—Å(–æ–≤)`);
            
            // –ë–∞–Ω–∏—Ç—å –±–æ—Ç–∞ –∏ —É–≤–µ–¥–æ–º–ª—è—Ç—å –æ –∫—É–ª–¥–∞—É–Ω–µ
            await member.ban({ reason: '–î–æ–±–∞–≤–ª–µ–Ω –≤–æ –≤—Ä–µ–º—è –∫—É–ª–¥–∞—É–Ω–∞' }).catch(() => {});
            
            try {
                await entry.executor.send(`‚è∞ **–ö–£–õ–î–ê–£–ù –ê–ö–¢–ò–í–ï–ù**\n\n–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä "${member.guild.name}" –∏–∑-–∑–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫—É–ª–¥–∞—É–Ω–∞!\n\nüî∏ –ë–æ—Ç "${member.user.tag}" –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω\nüî∏ –û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏: ${remainingTime} —á–∞—Å(–æ–≤)\nüî∏ –ö—É–ª–¥–∞—É–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∑–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ\n\n–î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∫—É–ª–¥–∞—É–Ω–∞.`);
            } catch (dmError) {
                console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∫—É–ª–¥–∞—É–Ω–µ ${entry.executor.tag}: ${dmError.message}`);
            }
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –¥–ª—è –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞
        const whitelistWarnings = whitelistBotWarnings.get(entry.executor.id) || 0;
        
        if (whitelistWarnings === 0) {
            // –ü–µ—Ä–≤–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞
            whitelistBotWarnings.set(entry.executor.id, 1);
            
            // –ë–∞–Ω–∏—Ç—å –±–æ—Ç–∞
            await member.ban({ reason: '–î–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞ (–ø–µ—Ä–≤–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ)' }).catch(() => {});
            
            try {
                await entry.executor.send(`‚ö†Ô∏è **–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï (–ë–ï–õ–´–ô –°–ü–ò–°–û–ö)**\n\n–í—ã –¥–æ–±–∞–≤–∏–ª–∏ –±–æ—Ç–∞ "${member.user.tag}" –Ω–∞ —Å–µ—Ä–≤–µ—Ä "${member.guild.name}". –î–∞–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞ –Ω–µ –º–æ–≥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–≤!\n\nüî∏ –≠—Ç–æ –≤–∞—à–µ –ø–µ—Ä–≤–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ\nüî∏ –ë–æ—Ç –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–∞–Ω–µ–Ω\nüî∏ –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü —Å–µ—Ä–≤–µ—Ä–∞ –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–≤\nüî∏ –ü—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–µ –≤—ã –±—É–¥–µ—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω—ã –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∏ –ø–æ–ª—É—á–∏—Ç–µ –º—É—Ç –Ω–∞ 7 –¥–Ω–µ–π —Å –∫—É–ª–¥–∞—É–Ω–æ–º –≤ 1 –¥–µ–Ω—å\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ.`);
                console.log(`‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–µ—Ä–≤–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞ ${entry.executor.tag}`);
            } catch (dmError) {
                console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ ${entry.executor.tag}: ${dmError.message}`);
            }
        } else {
            // –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞
            console.log(`üö® –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï –ò–ó –ë–ï–õ–û–ì–û –°–ü–ò–°–ö–ê: ${entry.executor.tag} –ø–æ–≤—Ç–æ—Ä–Ω–æ –¥–æ–±–∞–≤–∏–ª –±–æ—Ç–∞`);
            
            // –ò—Å–∫–ª—é—á–∞–µ–º –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞
            const index = settings.whitelist.indexOf(entry.executor.id);
            if (index !== -1) {
                settings.whitelist.splice(index, 1);
                saveSettings();
                console.log(`‚úÖ ${entry.executor.tag} –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∑–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞`);
            }
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—É–ª–¥–∞—É–Ω –Ω–∞ 1 –¥–µ–Ω—å
            botAddCooldown.set(entry.executor.id, Date.now());
            
            try {
                await entry.executor.send(`üö´ **–ò–°–ö–õ–Æ–ß–ï–ù–ò–ï –ò–ó –ë–ï–õ–û–ì–û –°–ü–ò–°–ö–ê**\n\n–í—ã –±—ã–ª–∏ –∏—Å–∫–ª—é—á–µ–Ω—ã –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ "${member.guild.name}" –∑–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞ "${member.user.tag}" –ø–æ—Å–ª–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è!\n\nüî∏ –ë–æ—Ç –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–∞–Ω–µ–Ω\nüî∏ –í—ã –±–æ–ª—å—à–µ –Ω–µ –≤ –ø—Ä–∏–≤–∏–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ\nüî∏ –ü–æ–ª—É—á–∏–ª–∏ –º—É—Ç –Ω–∞ 7 –¥–Ω–µ–π –∏ —Å–Ω—è—Ç—ã –≤—Å–µ —Ä–æ–ª–∏\nüî∏ –ö—É–ª–¥–∞—É–Ω –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–≤: 1 –¥–µ–Ω—å\nüî∏ –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü —Å–µ—Ä–≤–µ—Ä–∞ –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–≤\n\n–í–∞—à–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –æ—Ç–æ–∑–≤–∞–Ω—ã.`);
                console.log(`‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏—Å–∫–ª—é—á–µ–Ω–∏–∏ ${entry.executor.tag}`);
            } catch (dmError) {
                console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏—Å–∫–ª—é—á–µ–Ω–∏–∏ ${entry.executor.tag}: ${dmError.message}`);
            }
            
            // –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –±–∞–Ω –Ω–æ–≤–æ–≥–æ –±–æ—Ç–∞
            await member.ban({ reason: '–î–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–º –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞' }).catch(() => {});

            // –ù–∞–∫–∞–∑–∞–Ω–∏–µ —Ç–æ–≥–æ, –∫—Ç–æ –¥–æ–±–∞–≤–∏–ª (—Ç–µ–ø–µ—Ä—å —É–∂–µ –Ω–µ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ)
            await punishUser(member.guild, entry.executor, '–ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞ (–∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞)');
            whitelistBotWarnings.delete(entry.executor.id); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
        }
        return;
    }

    // –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª—è—é—â–∏–π –ù–ï –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ - –ú–ì–ù–û–í–ï–ù–ù–´–ô –ë–ê–ù –ë–û–¢–ê –∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ
    console.log(`üö® –ë–õ–û–ö–ò–†–û–í–ö–ê –ë–û–¢–ê! ${member.user.tag} –¥–æ–±–∞–≤–ª–µ–Ω –Ω–µ-–±–µ–ª—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${entry.executor.tag}`);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ü–ï–†–ï–î –Ω–∞–∫–∞–∑–∞–Ω–∏–µ–º
    try {
        await entry.executor.send(`üö´ **–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï**\n\n–í—ã –ø–æ–ø—ã—Ç–∞–ª–∏—Å—å –¥–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ "${member.user.tag}" –Ω–∞ —Å–µ—Ä–≤–µ—Ä "${member.guild.name}", –Ω–æ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü —Å–µ—Ä–≤–µ—Ä–∞ –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–≤!\n\nüî∏ –ë–æ—Ç –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–∞–Ω–µ–Ω\nüî∏ –í—ã –ø–æ–ª—É—á–∏–ª–∏ –º—É—Ç –Ω–∞ 7 –¥–Ω–µ–π –∏ —Å–Ω—è—Ç—ã –≤—Å–µ —Ä–æ–ª–∏\nüî∏ –ü—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–µ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ –±—É–¥–µ—Ç —Å—Ç—Ä–æ–∂–µ\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ.`);
        console.log(`‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ ${entry.executor.tag} –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞`);
    } catch (dmError) {
        console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ ${entry.executor.tag}: ${dmError.message}`);
    }
    
    // –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –±–∞–Ω –Ω–æ–≤–æ–≥–æ –±–æ—Ç–∞
    await member.ban({ reason: '–î–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–µ –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞' }).catch(() => {});

    // –ù–∞–∫–∞–∑–∞–Ω–∏–µ —Ç–æ–≥–æ, –∫—Ç–æ –¥–æ–±–∞–≤–∏–ª (–¥–∞–∂–µ –µ—Å–ª–∏ —É –Ω–µ–≥–æ –∞–¥–º–∏–Ω –ø—Ä–∞–≤–∞)
    await punishUser(member.guild, entry.executor, '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞ (–Ω–µ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ)');
});

// –ö–æ–º–∞–Ω–¥—ã
const commands = [
    new SlashCommandBuilder()
        .setName('–Ω–∞—Å—Ç—Ä–æ–π–∫–∏')
        .setDescription('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω—Ç–∏–∫—Ä–∞—à —Å–∏—Å—Ç–µ–º—ã')
        .setDefaultMemberPermissions(PermissionFlagsBits.Administrator),

    new SlashCommandBuilder()
        .setName('–±–µ–ª—ã–π—Å–ø–∏—Å–æ–∫')
        .setDescription('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–µ–ª—ã–º —Å–ø–∏—Å–∫–æ–º (—Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü —Å–µ—Ä–≤–µ—Ä–∞)')
        .addSubcommand(subcommand =>
            subcommand
                .setName('–¥–æ–±–∞–≤–∏—Ç—å')
                .setDescription('–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫')
                .addUserOption(option =>
                    option.setName('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
                        .setDescription('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–ª–∏ –±–æ—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è')
                        .setRequired(true)))
        .addSubcommand(subcommand =>
            subcommand
                .setName('—É–¥–∞–ª–∏—Ç—å')
                .setDescription('–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞')
                .addUserOption(option =>
                    option.setName('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
                        .setDescription('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–ª–∏ –±–æ—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è')
                        .setRequired(true)))
        .addSubcommand(subcommand =>
            subcommand
                .setName('—Å–ø–∏—Å–æ–∫')
                .setDescription('–ü–æ–∫–∞–∑–∞—Ç—å –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫'))
];

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
client.on('interactionCreate', async (interaction) => {
    if (!interaction.isChatInputCommand()) return;

    if (interaction.commandName === '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏') {
        if (!interaction.member.permissions.has(PermissionFlagsBits.Administrator)) {
            return interaction.reply({ content: '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!', flags: 64 });
        }

        const embed = new EmbedBuilder()
            .setTitle('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ê–Ω—Ç–∏–∫—Ä–∞—à –°–∏—Å—Ç–µ–º—ã')
            .setColor(0x00ff00)
            .addFields(
                { name: 'üõ°Ô∏è –ó–∞—â–∏—Ç–∞ –æ—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–π', value: `${settings.mentionProtection.enabled ? '‚úÖ –í–∫–ª—é—á–µ–Ω–∞' : '‚ùå –í—ã–∫–ª—é—á–µ–Ω–∞'}\n–ú–∞–∫—Å. —É–ø–æ–º–∏–Ω–∞–Ω–∏–π: ${settings.mentionProtection.maxMentions}`, inline: true },
                { name: 'üìÅ –ó–∞—â–∏—Ç–∞ –∫–∞–Ω–∞–ª–æ–≤', value: `${settings.channelProtection.enabled ? '‚úÖ –í–∫–ª—é—á–µ–Ω–∞' : '‚ùå –í—ã–∫–ª—é—á–µ–Ω–∞'}\n–ú–∞–∫—Å. –≤ –º–∏–Ω—É—Ç—É: ${settings.channelProtection.maxChannelsPerMinute}`, inline: true },
                { name: 'üëë –ó–∞—â–∏—Ç–∞ —Ä–æ–ª–µ–π', value: `${settings.roleProtection.enabled ? '‚úÖ –í–∫–ª—é—á–µ–Ω–∞' : '‚ùå –í—ã–∫–ª—é—á–µ–Ω–∞'}\n–ú–∞–∫—Å. –≤ –º–∏–Ω—É—Ç—É: ${settings.roleProtection.maxRolesPerMinute}`, inline: true },
                { name: 'üìÇ –ó–∞—â–∏—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π', value: `${settings.categoryProtection.enabled ? '‚úÖ –í–∫–ª—é—á–µ–Ω–∞' : '‚ùå –í—ã–∫–ª—é—á–µ–Ω–∞'}\n–ú–∞–∫—Å. –≤ –º–∏–Ω—É—Ç—É: ${settings.categoryProtection.maxCategoriesPerMinute}`, inline: true },
                { name: '‚öñÔ∏è –ù–∞–∫–∞–∑–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', value: `–ë–∞–Ω: ${settings.punishment.users.ban ? '‚úÖ' : '‚ùå'}\n–ú—É—Ç: ${settings.punishment.users.mute ? '‚úÖ' : '‚ùå'} (${settings.punishment.users.muteDuration} –¥–Ω–µ–π)\n–£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π: ${settings.punishment.users.removeRoles ? '‚úÖ' : '‚ùå'}`, inline: true },
                { name: 'ü§ñ –ù–∞–∫–∞–∑–∞–Ω–∏—è –±–æ—Ç–æ–≤', value: `–ë–∞–Ω: ${settings.punishment.bots.ban ? '‚úÖ' : '‚ùå'}\n–£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π: ${settings.punishment.bots.removeRoles ? '‚úÖ' : '‚ùå'}`, inline: true },
                { name: 'üìã –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫', value: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${settings.whitelist.length}`, inline: true }
            );

        const buttons = new ActionRowBuilder()
            .addComponents(
                new ButtonBuilder()
                    .setCustomId('toggle_mention_protection')
                    .setLabel('–£–ø–æ–º–∏–Ω–∞–Ω–∏—è')
                    .setStyle(settings.mentionProtection.enabled ? ButtonStyle.Success : ButtonStyle.Danger),
                new ButtonBuilder()
                    .setCustomId('toggle_channel_protection')
                    .setLabel('–ö–∞–Ω–∞–ª—ã')
                    .setStyle(settings.channelProtection.enabled ? ButtonStyle.Success : ButtonStyle.Danger),
                new ButtonBuilder()
                    .setCustomId('toggle_role_protection')
                    .setLabel('–†–æ–ª–∏')
                    .setStyle(settings.roleProtection.enabled ? ButtonStyle.Success : ButtonStyle.Danger),
                new ButtonBuilder()
                    .setCustomId('toggle_category_protection')
                    .setLabel('–ö–∞—Ç–µ–≥–æ—Ä–∏–∏')
                    .setStyle(settings.categoryProtection.enabled ? ButtonStyle.Success : ButtonStyle.Danger),
                new ButtonBuilder()
                    .setCustomId('user_punishment_settings')
                    .setLabel('–ù–∞–∫–∞–∑–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
                    .setStyle(ButtonStyle.Secondary)
            );

        const buttons2 = new ActionRowBuilder()
            .addComponents(
                new ButtonBuilder()
                    .setCustomId('bot_punishment_settings')
                    .setLabel('–ù–∞–∫–∞–∑–∞–Ω–∏—è –±–æ—Ç–æ–≤')
                    .setStyle(ButtonStyle.Secondary)
            );

        await interaction.reply({ embeds: [embed], components: [buttons, buttons2], flags: 64 });
    }

    if (interaction.commandName === '–±–µ–ª—ã–π—Å–ø–∏—Å–æ–∫') {
        if (interaction.guild.ownerId !== interaction.user.id) {
            return interaction.reply({ content: '–¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü —Å–µ—Ä–≤–µ—Ä–∞ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –±–µ–ª—ã–º —Å–ø–∏—Å–∫–æ–º!', ephemeral: true });
        }

        const subcommand = interaction.options.getSubcommand();

        if (subcommand === '–¥–æ–±–∞–≤–∏—Ç—å') {
            const user = interaction.options.getUser('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');

            if (settings.whitelist.includes(user.id)) {
                return interaction.reply({ content: `${user.bot ? '–≠—Ç–æ—Ç –±–æ—Ç' : '–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'} —É–∂–µ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ!`, flags: 64 });
            }

            settings.whitelist.push(user.id);
            saveSettings();

            await interaction.reply({ content: `‚úÖ ${user.bot ? '–ë–æ—Ç' : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'} ${user.tag} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫!`, flags: 64 });
        }

        if (subcommand === '—É–¥–∞–ª–∏—Ç—å') {
            const user = interaction.options.getUser('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');

            const index = settings.whitelist.indexOf(user.id);
            if (index === -1) {
                return interaction.reply({ content: `${user.bot ? '–≠—Ç–æ–≥–æ –±–æ—Ç–∞' : '–≠—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'} –Ω–µ—Ç –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ!`, flags: 64 });
            }

            settings.whitelist.splice(index, 1);
            saveSettings();

            await interaction.reply({ content: `‚úÖ ${user.bot ? '–ë–æ—Ç' : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'} ${user.tag} —É–¥–∞–ª–µ–Ω –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞!`, flags: 64 });
        }

        if (subcommand === '—Å–ø–∏—Å–æ–∫') {
            let whitelistText = '–ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç';

            if (settings.whitelist.length > 0) {
                const users = [];
                for (const userId of settings.whitelist) {
                    try {
                        const user = await client.users.fetch(userId);
                        users.push(`${user.tag} (${userId})`);
                    } catch {
                        users.push(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (${userId})`);
                    }
                }
                whitelistText = users.join('\n');
            }

            const embed = new EmbedBuilder()
                .setTitle('üìã –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫')
                .setDescription(whitelistText)
                .setColor(0x00ff00);

            await interaction.reply({ embeds: [embed], flags: 64 });
        }
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
client.on('interactionCreate', async (interaction) => {
    if (!interaction.isButton()) return;

    if (!interaction.member.permissions.has(PermissionFlagsBits.Administrator)) {
        return interaction.reply({ content: '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏!', flags: 64 });
    }

    switch (interaction.customId) {
        case 'toggle_mention_protection':
            settings.mentionProtection.enabled = !settings.mentionProtection.enabled;
            saveSettings();
            await interaction.reply({ content: `–ó–∞—â–∏—Ç–∞ –æ—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–π ${settings.mentionProtection.enabled ? '–≤–∫–ª—é—á–µ–Ω–∞' : '–≤—ã–∫–ª—é—á–µ–Ω–∞'}!`, flags: 64 });
            break;

        case 'toggle_channel_protection':
            settings.channelProtection.enabled = !settings.channelProtection.enabled;
            saveSettings();
            await interaction.reply({ content: `–ó–∞—â–∏—Ç–∞ –∫–∞–Ω–∞–ª–æ–≤ ${settings.channelProtection.enabled ? '–≤–∫–ª—é—á–µ–Ω–∞' : '–≤—ã–∫–ª—é—á–µ–Ω–∞'}!`, flags: 64 });
            break;

        case 'toggle_role_protection':
            settings.roleProtection.enabled = !settings.roleProtection.enabled;
            saveSettings();
            await interaction.reply({ content: `–ó–∞—â–∏—Ç–∞ —Ä–æ–ª–µ–π ${settings.roleProtection.enabled ? '–≤–∫–ª—é—á–µ–Ω–∞' : '–≤—ã–∫–ª—é—á–µ–Ω–∞'}!`, flags: 64 });
            break;

        case 'toggle_category_protection':
            settings.categoryProtection.enabled = !settings.categoryProtection.enabled;
            saveSettings();
            await interaction.reply({ content: `–ó–∞—â–∏—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π ${settings.categoryProtection.enabled ? '–≤–∫–ª—é—á–µ–Ω–∞' : '–≤—ã–∫–ª—é—á–µ–Ω–∞'}!`, flags: 64 });
            break;

        case 'user_punishment_settings':
            const userPunishmentEmbed = new EmbedBuilder()
                .setTitle('‚öñÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
                .setColor(0xff9900)
                .addFields(
                    { name: 'üî® –ë–∞–Ω', value: settings.punishment.users.ban ? '‚úÖ –í–∫–ª—é—á–µ–Ω' : '‚ùå –í—ã–∫–ª—é—á–µ–Ω', inline: true },
                    { name: 'üîá –ú—É—Ç', value: settings.punishment.users.mute ? `‚úÖ –í–∫–ª—é—á–µ–Ω (${settings.punishment.users.muteDuration} –¥–Ω–µ–π)` : '‚ùå –í—ã–∫–ª—é—á–µ–Ω', inline: true },
                    { name: 'üë§ –£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π', value: settings.punishment.users.removeRoles ? '‚úÖ –í–∫–ª—é—á–µ–Ω–æ' : '‚ùå –í—ã–∫–ª—é—á–µ–Ω–æ', inline: true }
                );

            const userPunishmentButtons = new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                        .setCustomId('toggle_user_ban')
                        .setLabel('–ë–∞–Ω')
                        .setStyle(settings.punishment.users.ban ? ButtonStyle.Success : ButtonStyle.Danger),
                    new ButtonBuilder()
                        .setCustomId('toggle_user_mute')
                        .setLabel('–ú—É—Ç')
                        .setStyle(settings.punishment.users.mute ? ButtonStyle.Success : ButtonStyle.Danger),
                    new ButtonBuilder()
                        .setCustomId('toggle_user_remove_roles')
                        .setLabel('–£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π')
                        .setStyle(settings.punishment.users.removeRoles ? ButtonStyle.Success : ButtonStyle.Danger)
                );

            await interaction.reply({ embeds: [userPunishmentEmbed], components: [userPunishmentButtons], flags: 64 });
            break;

        case 'bot_punishment_settings':
            const botPunishmentEmbed = new EmbedBuilder()
                .setTitle('ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–π –¥–ª—è –±–æ—Ç–æ–≤')
                .setColor(0xff9900)
                .addFields(
                    { name: 'üî® –ë–∞–Ω', value: settings.punishment.bots.ban ? '‚úÖ –í–∫–ª—é—á–µ–Ω' : '‚ùå –í—ã–∫–ª—é—á–µ–Ω', inline: true },
                    { name: 'üë§ –£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π', value: settings.punishment.bots.removeRoles ? '‚úÖ –í–∫–ª—é—á–µ–Ω–æ' : '‚ùå –í—ã–∫–ª—é—á–µ–Ω–æ', inline: true }
                );

            const botPunishmentButtons = new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                        .setCustomId('toggle_bot_ban')
                        .setLabel('–ë–∞–Ω')
                        .setStyle(settings.punishment.bots.ban ? ButtonStyle.Success : ButtonStyle.Danger),
                    new ButtonBuilder()
                        .setCustomId('toggle_bot_remove_roles')
                        .setLabel('–£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π')
                        .setStyle(settings.punishment.bots.removeRoles ? ButtonStyle.Success : ButtonStyle.Danger)
                );

            await interaction.reply({ embeds: [botPunishmentEmbed], components: [botPunishmentButtons], flags: 64 });
            break;

        case 'toggle_user_ban':
            settings.punishment.users.ban = !settings.punishment.users.ban;
            saveSettings();
            await interaction.reply({ content: `–ù–∞–∫–∞–∑–∞–Ω–∏–µ –±–∞–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ${settings.punishment.users.ban ? '–≤–∫–ª—é—á–µ–Ω–æ' : '–≤—ã–∫–ª—é—á–µ–Ω–æ'}!`, flags: 64 });
            break;

        case 'toggle_user_mute':
            settings.punishment.users.mute = !settings.punishment.users.mute;
            saveSettings();
            await interaction.reply({ content: `–ù–∞–∫–∞–∑–∞–Ω–∏–µ –º—É—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ${settings.punishment.users.mute ? '–≤–∫–ª—é—á–µ–Ω–æ' : '–≤—ã–∫–ª—é—á–µ–Ω–æ'}!`, flags: 64 });
            break;

        case 'toggle_user_remove_roles':
            settings.punishment.users.removeRoles = !settings.punishment.users.removeRoles;
            saveSettings();
            await interaction.reply({ content: `–£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ${settings.punishment.users.removeRoles ? '–≤–∫–ª—é—á–µ–Ω–æ' : '–≤—ã–∫–ª—é—á–µ–Ω–æ'}!`, flags: 64 });
            break;

        case 'toggle_bot_ban':
            settings.punishment.bots.ban = !settings.punishment.bots.ban;
            saveSettings();
            await interaction.reply({ content: `–ù–∞–∫–∞–∑–∞–Ω–∏–µ –±–∞–Ω–æ–º –±–æ—Ç–æ–≤ ${settings.punishment.bots.ban ? '–≤–∫–ª—é—á–µ–Ω–æ' : '–≤—ã–∫–ª—é—á–µ–Ω–æ'}!`, flags: 64 });
            break;

        case 'toggle_bot_remove_roles':
            settings.punishment.bots.removeRoles = !settings.punishment.bots.removeRoles;
            saveSettings();
            await interaction.reply({ content: `–£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π —É –±–æ—Ç–æ–≤ ${settings.punishment.bots.removeRoles ? '–≤–∫–ª—é—á–µ–Ω–æ' : '–≤—ã–∫–ª—é—á–µ–Ω–æ'}!`, flags: 64 });
            break;
    }
});

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥
async function deployCommands() {
    try {
        const rest = new REST({ version: '10' }).setToken(config.token);

        console.log('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥...');

        await rest.put(
            Routes.applicationGuildCommands(config.clientId, config.guildId),
            { body: commands }
        );

        console.log('–ö–æ–º–∞–Ω–¥—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!');
    } catch (error) {
        console.error(error);
    }
}

// –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –±–æ—Ç–∞
client.once('clientReady', async () => {
    console.log(`ü§ñ –ë–æ—Ç ${client.user.tag} –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!`);
    console.log(`üõ°Ô∏è –ê–Ω—Ç–∏–∫—Ä–∞—à —Å–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–∞`);

    loadSettings();
    await deployCommands();
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
client.login(config.token);